plugins {
    id "org.asciidoctor.convert" version "1.5.9.2"
    id 'org.springframework.boot' version '2.3.4.RELEASE'
    id 'io.spring.dependency-management' version '1.0.10.RELEASE'
    id 'java'
    id 'war'
}

group = 'com.genesislabs'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-aop'
    implementation 'org.springframework.boot:spring-boot-starter-data-rest'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web-services'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-thymeleaf', version: '2.5.6'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-redis', version: '2.5.6'

    implementation group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.2'
    implementation 'junit:junit:4.13.1'
    runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.2'
    runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.11.2'

    implementation group: 'com.querydsl', name: 'querydsl-sql', version: '4.0.0'
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.11.4'
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.11.4'

    compile("com.querydsl:querydsl-core")
    compile("com.querydsl:querydsl-jpa")
    compile group: 'com.google.code.gson', name: 'gson', version: '2.8.6'

    testImplementation 'org.springframework.security:spring-security-test'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'mysql:mysql-connector-java'
    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor("com.querydsl:querydsl-apt:4.3.1:jpa")
    annotationProcessor("jakarta.persistence:jakarta.persistence-api")
    annotationProcessor("jakarta.annotation:jakarta.annotation-api")

    providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
}

def generated = 'src/main/generated'
sourceSets {
    main.java.srcDirs += [generated]
}

tasks.withType(JavaCompile) {
    options.annotationProcessorGeneratedSourcesDirectory = file(generated)
}

clean.doLast {
    file(generated).deleteDir()
}

test {
    useJUnitPlatform()
}